{"version":3,"sources":["Components/TransactionHistory/transactionHistory.module.css","Components/Dashboard/dashboard.module.css","Components/Balance/balance.module.css","Components/Controls/Controls.js","Components/Balance/Balance.js","Components/TransactionHistory/TransactionHistory.js","Components/Dashboard/Dashboard.js","Components/App.js","index.js","Components/Controls/controls.module.css"],"names":["module","exports","Controls","amount","onInputChange","onControlBtn","className","style","controls","container","type","value","onChange","onClick","data-action","Balance","deposit","withdraw","balance","arrowUp","Math","round","toFixed","arrowDown","TransactionHistory","transactions","history","map","transaction","key","id","abs","time","Dashboard","state","notifyAmountNull","toast","containerId","notifyNotWithdraw","handleInputChange","e","setState","target","handleControlBtn","timeTransaction","Date","shortid","generate","Number","toLocaleString","dataset","action","prev","this","dashboard","enableMultiContainer","position","POSITION","BOTTOM_RIGHT","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,QAAU,sC,mBCA5BD,EAAOC,QAAU,CAAC,UAAY,+B,sDCA9BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,UAAY,2BAA2B,UAAY,6B,2KCuB5HC,EApBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,cAAeC,EAA1B,EAA0BA,aAA1B,OACf,6BAASC,UAAWC,IAAMC,UACxB,yBAAKF,UAAWC,IAAME,WACpB,2BAAOC,KAAK,SAASC,MAAOR,EAAQS,SAAUR,IAC9C,4BAAQM,KAAK,SAASG,QAASR,EAAcS,cAAY,WAAzD,WAGA,4BAAQJ,KAAK,SAASG,QAASR,EAAcS,cAAY,YAAzD,e,gBCeSC,EAtBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,QAAtB,OACd,6BAASZ,UAAWC,IAAMW,SACxB,2BACE,0BAAMZ,UAAWC,IAAMY,SAAvB,UACA,+BAAQC,KAAKC,MAAgB,IAAVL,GAAiB,KAAKM,QAAQ,GAAjD,MAEF,2BACE,0BAAMhB,UAAWC,IAAMgB,WAAvB,UACA,+BAAQH,KAAKC,MAAiB,IAAXJ,GAAkB,KAAKK,QAAQ,GAAlD,MAEF,0BAAMhB,UAAWC,IAAME,WAAvB,aACaW,KAAKC,MAAgB,IAAVH,GAAiB,KAAKI,QAAQ,GADtD,O,iBCwBWE,EAjCY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,2BAAOnB,UAAWC,IAAMmB,SACtB,+BACE,4BACE,2CACA,sCACA,sCAGJ,+BACGD,EAAaE,KAAI,SAAAC,GAAW,OAC3B,wBAAIC,IAAKD,EAAYE,IACnB,4BAAKF,EAAYlB,MACjB,6BACIU,KAAKC,MAAqC,IAA/BD,KAAKW,IAAIH,EAAYzB,SAAiB,KAAKmB,QAAQ,GADlE,KAGA,4BAAKM,EAAYI,a,iBCmEZC,E,2MA5EbC,MAAQ,CACNT,aAAc,GACdP,QAAS,EACTf,OAAQ,GACRa,QAAS,EACTC,SAAU,G,EAGZkB,iBAAmB,kBACjBC,YAAM,8MAA0C,CAC9CC,YAAa,mB,EAGjBC,kBAAoB,kBAClBF,YAAM,oSAA0D,CAC9DC,YAAa,mB,EAGjBE,kBAAoB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEtC,OAAQqC,EAAEE,OAAO/B,S,EAE1DgC,iBAAmB,YAAiB,IAAdD,EAAa,EAAbA,OACdE,EAAkB,IAAIC,KACpB1C,EAAW,EAAK+B,MAAhB/B,OACFyB,EAAc,CAClBE,GAAIgB,IAAQC,WACZ5C,OAAQ6C,OAAO,EAAKd,MAAM/B,QAC1B6B,KAAMY,EAAgBK,kBAExB,IAAKD,OAAO,EAAKd,MAAM/B,QACrB,OAAO,EAAKgC,mBAEd,GAA8B,YAA1BO,EAAOQ,QAAQC,OACjBvB,EAAYlB,KAAO,UACnB,EAAK+B,UAAS,SAAAW,GAAI,MAAK,CACrBlC,QAASkC,EAAKlC,QAAU8B,OAAO7C,GAC/Ba,QAASoC,EAAKpC,QAAUgC,OAAO7C,YAE5B,GAA8B,aAA1BuC,EAAOQ,QAAQC,OAAuB,CAC/C,GAAI,EAAKjB,MAAM/B,OAAS,EAAK+B,MAAMhB,QACjC,OAAO,EAAKoB,oBAEdV,EAAYlB,KAAO,WACnB,EAAK+B,UAAS,SAAAW,GAAI,MAAK,CACrBlC,QAASkC,EAAKlC,QAAU8B,OAAO7C,GAC/Bc,SAAUmC,EAAKnC,SAAW+B,OAAO7C,OAIrC,OAAO,EAAKsC,UAAS,SAAAW,GAAI,MAAK,CAC5B3B,aAAa,CAAEG,GAAH,mBAAmBwB,EAAK3B,eACpCtB,OAAQ,Q,wEAIF,IAAD,EACsDkD,KAAKnB,MAA1D/B,EADD,EACCA,OAAQa,EADT,EACSA,QAASC,EADlB,EACkBA,SAAUC,EAD5B,EAC4BA,QAASO,EADrC,EACqCA,aAE5C,OACE,yBAAKnB,UAAWC,IAAM+C,WACpB,kBAAC,EAAD,CACEnD,OAAQA,EACRC,cAAeiD,KAAKd,kBACpBlC,aAAcgD,KAAKV,mBAErB,kBAAC,EAAD,CAAS3B,QAASA,EAASC,SAAUA,EAAUC,QAASA,IACxD,kBAAC,EAAD,CAAoBO,aAAcA,IAClC,kBAAC,IAAD,CACE8B,sBAAoB,EACpBlB,YAAY,gBACZmB,SAAUpB,IAAMqB,SAASC,oB,GAvEXC,IAAMC,WCLfC,EAFH,kBAAM,kBAAC,EAAD,OCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDjE,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,+B","file":"static/js/main.ac976d88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"transactionHistory_history__xU1iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"dashboard_dashboard__Mhi_8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__jk0Jt\",\"arrowUp\":\"balance_arrowUp__PYxX7\",\"arrowDown\":\"balance_arrowDown__1ezsj\",\"container\":\"balance_container__1P6i5\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './controls.module.css';\n\nconst Controls = ({ amount, onInputChange, onControlBtn }) => (\n  <section className={style.controls}>\n    <div className={style.container}>\n      <input type=\"number\" value={amount} onChange={onInputChange} />\n      <button type=\"button\" onClick={onControlBtn} data-action=\"deposit\">\n        Deposit\n      </button>\n      <button type=\"button\" onClick={onControlBtn} data-action=\"withdraw\">\n        Withdraw\n      </button>\n    </div>\n  </section>\n);\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onControlBtn: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './balance.module.css';\n\nconst Balance = ({ deposit, withdraw, balance }) => (\n  <section className={style.balance}>\n    <p>\n      <span className={style.arrowUp}>⬆</span>\n      <span>{(Math.round(deposit * 100) / 100).toFixed(2)}$</span>\n    </p>\n    <p>\n      <span className={style.arrowDown}>⬇</span>\n      <span>{(Math.round(withdraw * 100) / 100).toFixed(2)}$</span>\n    </p>\n    <span className={style.container}>\n      Balance: {(Math.round(balance * 100) / 100).toFixed(2)}$\n    </span>\n  </section>\n);\n\nBalance.propTypes = {\n  deposit: PropTypes.number.isRequired,\n  withdraw: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={style.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td>{transaction.type}</td>\n          <td>\n            {(Math.round(Math.abs(transaction.amount) * 100) / 100).toFixed(2)}$\n          </td>\n          <td>{transaction.time}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      amount: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      time: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport style from './dashboard.module.css';\n\nclass Dashboard extends React.Component {\n  // eslint-disable-next-line react/state-in-constructor\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: '',\n    deposit: 0,\n    withdraw: 0,\n  };\n\n  notifyAmountNull = () =>\n    toast('Введите сумму для проведения операции!', {\n      containerId: 'amountControl',\n    });\n\n  notifyNotWithdraw = () =>\n    toast('На счету недостаточно средств для проведения операции!', {\n      containerId: 'amountControl',\n    });\n\n  handleInputChange = e => this.setState({ amount: e.target.value });\n\n  handleControlBtn = ({ target }) => {\n    const timeTransaction = new Date();\n    const { amount } = this.state;\n    const transaction = {\n      id: shortid.generate(),\n      amount: Number(this.state.amount),\n      time: timeTransaction.toLocaleString(),\n    };\n    if (!Number(this.state.amount)) {\n      return this.notifyAmountNull();\n    }\n    if (target.dataset.action === 'deposit') {\n      transaction.type = 'deposit';\n      this.setState(prev => ({\n        balance: prev.balance + Number(amount),\n        deposit: prev.deposit + Number(amount),\n      }));\n    } else if (target.dataset.action === 'withdraw') {\n      if (this.state.amount > this.state.balance) {\n        return this.notifyNotWithdraw();\n      }\n      transaction.type = 'withdraw';\n      this.setState(prev => ({\n        balance: prev.balance - Number(amount),\n        withdraw: prev.withdraw + Number(amount),\n      }));\n    }\n\n    return this.setState(prev => ({\n      transactions: [transaction, ...prev.transactions],\n      amount: '',\n    }));\n  };\n\n  render() {\n    const { amount, deposit, withdraw, balance, transactions } = this.state;\n\n    return (\n      <div className={style.dashboard}>\n        <Controls\n          amount={amount}\n          onInputChange={this.handleInputChange}\n          onControlBtn={this.handleControlBtn}\n        />\n        <Balance deposit={deposit} withdraw={withdraw} balance={balance} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer\n          enableMultiContainer\n          containerId=\"amountControl\"\n          position={toast.POSITION.BOTTOM_RIGHT}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__1Rwbp\",\"container\":\"controls_container__1n-K5\"};"],"sourceRoot":""}